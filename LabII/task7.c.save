#include <stdio.h>
#include <stdlib.h>
#include <math.h>

double Recalc2EpsRecurrent(double, long, int);
double datShit(double);

/**Infinity Row высчитывает сумму ряда с определенной точностью*/
double ExpNegX(double x){
    //return 1 + Recalc2EpsRecurrent(x, 1, 1);
    return datShit(x);
}

int depth = 2000;
int current_depth = 0;
double Recalc2EpsRecurrent(double x, double numerator, long denominator, int i){
    current_depth++;
    int sign = i % 2 ? -1 : 1;
    numerator *= sign * x;
    denominator *= i++;
    printf("n=(%d) * %.4lf / %d\n", sign, numerator, denominator);
    double func = sign * numerator / denominator;
    if(current_depth > depth) {
        printf("too deep");
        return 0;
    }
    if(abs(n) < 1E-4) return func;
    else return func += Recalc2EpsRecurrent(numerator, n, i);
}

double datShit(double x){
    double func = 1;
    for(double kek = 1, n=1, fact=1, i=1, sign; abs(n) >= 1e-4;i++){
        fact*=i;
        kek *= x;
        current_depth++;
        sign = (int)i % 2 ? -1 : 1;
        n = sign * kek / fact;
        func += n;
        printf("n = %.lf * %.4lf / %.lf\n", sign, kek, fact);
        printf("n = %.4lf\n",n);
        printf("f(x) = %.4lf\n",func);
        if(current_depth > depth) {
            printf("too deep\n");
            return 0;
        }
    }
    return func;
}
